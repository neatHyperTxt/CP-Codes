#include<iostream>
#include<map>
#include<unordered_set>
#include<vector>
#include<algorithm>

#define ll long long int

using namespace std;

vector<ll> trial_division(ll n) // all the elements will be Checked
{
	vector<ll>factors;
	for(ll i=2;i*i<=n;i++)
	{
		while(n%i==0)
		{
			factors.push_back(i);
			n/=i;
		}
	}
	if(n>1)
	{
		factors.push_back(n);
	}
	return factors;
}
vector<ll> wheelFactorization(ll n) // only 50% of the elements will be Checked
{
	vector<ll>factors;
	while(n%2==0)
	{
		factors.push_back(2);
		n/=2;
	}
	for(ll i=3;i*i<=n;i++)
	{
		while(n%i==0)
		{
			factors.push_back(i);
			n/=i;
		}
	}
	if(n>1)
	{
		factors.push_back(n);
	}
	return factors;
}
vector<ll>wheelFactorization33(ll n) // only 33% of the elements will be Checked
{
	vector<ll>factors;
	for(ll d:{2,3,5})
	{
		while(n%d==0)
		{
			factors.push_back(d);
			n/=d;
		}
	}
	static ll increments[8] = {4,2,4,2,4,6,2,6};
	ll j=0;
	for(ll i=7;i*i<=n;i+=increments[j++])
	{
		while(n%i==0)
		{
			factors.push_back(i);
			n/=i;
		}
		if(i==8)
		{
			i=0;
		}
	}
	if(n>1)
	{
		factors.push_back(n);
	}
	return factors;
}
int main()
{
	#ifndef ONLINE_JUDGE
	// for getting input from input.txt
	freopen("input2.txt","r",stdin);
	// for writing output to output.txt
	freopen("output2.txt","w",stdout);
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll t;
	cin>>t;
	while(t--)
	{
		ll n;
		cin>>n;
		vector<ll>v = wheelFactorization33(n);
		for(auto i:v)
		{
			cout<<i<<" ";
		}
		cout<<endl;
	}
	return 0;
}
